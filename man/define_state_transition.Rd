% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/states_define.R
\name{define_state_transition}
\alias{define_state_transition}
\alias{define_state_transition_}
\alias{modify.state_transition}
\title{Define a Markov Model State Transition}
\usage{
define_state_transition(from = NA, to = NA, ...)

define_state_transition_(to, from, .dots)

\method{modify}{state_transition}(.OBJECT, ...)

\method{modify}{state_transition}(.OBJECT, ...)
}
\arguments{
\item{from}{Character vector of names of from-states for which
value is applied.  When not given, value is applied to any from
state.}

\item{to}{Character vector of names of to-states for which
value is applied.  When not given, value is applied to any to
state.}

\item{...}{Name-value pairs of expressions defining state
values.}

\item{.dots}{Used to work around non-standard evaluation.}

\item{.OBJECT}{An object of class \code{state_transition}.}
}
\value{
An object of class \code{state_transition} (actually a named
list of \code{lazy} expressions).
}
\description{
Define the values characterising a Markov Model trasition into,
out of, or between states.
}
\details{
As with \code{\link[=define_parameters]{define_parameters()}}, state transition values are
defined sequentially. Later state definition can thus
only refer to values defined earlier.

For the \code{modify} function, existing values are
modified, no new values can be added. Values order
matters since only values defined earlier can be
referenced in later expressions.
}
